{"version":3,"sources":["products.js","components/IconSwitch.js","components/ShopCard.js","components/CardsView.js","components/ShopItem.js","components/ListView.js","components/Store.js","App.js","index.js"],"names":["products","name","price","color","img","IconSwitch","icon","onSwitch","className","onClick","ShopCard","card","src","alt","CardsView","cards","map","idx","ShopItem","item","ListView","items","Store","useState","layoutType","setLayoutType","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAgCeA,G,WAhCE,CAAC,CAChBC,KAAM,gBACNC,MAAO,MACPC,MAAO,MACPC,IAAK,wGACJ,CACDH,KAAM,gBACNC,MAAO,MACPC,MAAO,QACPC,IAAK,wGACJ,CACDH,KAAM,gBACNC,MAAO,MACPC,MAAO,OACPC,IAAK,wGACJ,CACDH,KAAM,gBACNC,MAAO,MACPC,MAAO,QACPC,IAAK,wGACJ,CACDH,KAAM,gBACNC,MAAO,MACPC,MAAO,QACPC,IAAK,wGACJ,CACDH,KAAM,gBACNC,MAAO,MACPC,MAAO,QACPC,IAAK,0G,cCXQC,MAhBf,YAAyC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC3B,OACC,qBAAKC,UAAU,wBAAf,SACW,gBAATF,EACA,wBAAQE,UAAU,MAAMC,QAASF,EAAjC,SAA2C,sBAAMC,UAAU,0BAAhB,sBAC3C,wBAAQA,UAAU,MAAMC,QAASF,EAAjC,SAA2C,sBAAMC,UAAU,0BAAhB,yBCwBhCE,MA7Bf,YAA6B,IAATC,EAAQ,EAARA,KACXV,EAA4BU,EAA5BV,KAAMC,EAAsBS,EAAtBT,MAAOC,EAAeQ,EAAfR,MAAOC,EAAQO,EAARP,IAE5B,OACC,sBAAKI,UAAU,YAAf,UACC,sBAAKA,UAAU,mBAAf,UACC,oBAAIA,UAAU,iCAAd,SAAgDP,IAChD,mBAAGO,UAAU,gBAAb,SAA8BL,OAE/B,qBAAKK,UAAU,gBAAf,SACC,qBAAKA,UAAU,mBAAmBI,IAAKR,EAAKS,IAAKZ,MAElD,sBAAKO,UAAU,mBAAf,UACC,oBAAGA,UAAU,gBAAb,cAA+BN,KAC/B,wBAAQM,UAAU,UAAlB,gCCMWM,MAnBf,YAA+B,IAAVC,EAAS,EAATA,MACpB,OACC,qBAAKP,UAAU,aAAf,SACEO,EAAMC,KAAI,SAACL,EAAMM,GAAP,OAAe,cAAC,EAAD,CAAUN,KAAMA,GAAWM,SCmBzCC,MAvBf,YAA6B,IAATC,EAAQ,EAARA,KACXlB,EAA4BkB,EAA5BlB,KAAMC,EAAsBiB,EAAtBjB,MAAOC,EAAegB,EAAfhB,MAAOC,EAAQe,EAARf,IAE5B,OACC,sBAAKI,UAAU,YAAf,UACC,qBAAKA,UAAU,mBAAmBI,IAAKR,EAAKS,IAAKZ,IACjD,oBAAIO,UAAU,eAAd,SAA8BP,IAC9B,mBAAGO,UAAU,gBAAb,SAA8BL,IAC9B,oBAAGK,UAAU,gBAAb,cAA+BN,KAC/B,wBAAQM,UAAU,UAAlB,6BCWYY,MAnBf,YAA8B,IAAVC,EAAS,EAATA,MACnB,OACC,qBAAKb,UAAU,aAAf,SACEa,EAAML,KAAI,SAACG,EAAMF,GAAP,OAAe,cAAC,EAAD,CAAUE,KAAMA,GAAWF,SC+BzCK,MA/Bf,YAA8B,IAAbtB,EAAY,EAAZA,SAAY,EACQuB,mBAAS,eADjB,mBACrBC,EADqB,KACTC,EADS,KAS5B,OACC,sBAAKjB,UAAU,QAAf,UACC,cAAC,EAAD,CAAYF,KAAMkB,EAAYjB,SARf,WAGhBkB,EADe,gBAAfD,EAA+C,YAA8B,kBAO5D,gBAAfA,EACA,cAAC,EAAD,CAAWT,MAAOf,IAClB,cAAC,EAAD,CAAUqB,MAAOrB,QCRN0B,MARf,WACE,OACE,qBAAKlB,UAAU,MAAf,SACD,cAAC,EAAD,CAAOR,SAAUA,OCDpB2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.52610382.chunk.js","sourcesContent":["const products = [{\n  name: \"Nike Metcon 2\",\n  price: \"130\",\n  color: \"red\",\n  img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/1.jpg\"\n}, {\n  name: \"Nike Metcon 2\",\n  price: \"130\",\n  color: \"green\",\n  img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/2.jpg\"\n}, {\n  name: \"Nike Metcon 2\",\n  price: \"130\",\n  color: \"blue\",\n  img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/3.jpg\"\n}, {\n  name: \"Nike Metcon 2\",\n  price: \"130\",\n  color: \"black\",\n  img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/4.jpg\"\n}, {\n  name: \"Nike free run\",\n  price: \"170\",\n  color: \"black\",\n  img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/7.jpg\"\n}, {\n  name: \"Nike Metcon 3\",\n  price: \"150\",\n  color: \"green\",\n  img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/5.jpg\"\n}];\n\nexport default products;","import PropTypes from 'prop-types';\n\nfunction IconSwitch({ icon, onSwitch }) {\n\treturn (\n\t\t<div className=\"switch-icon-container\">\n\t\t\t{icon === \"view_module\" ?\n\t\t\t\t<button className=\"btn\" onClick={onSwitch}><span className=\"material-icon list-icon\">&#xe8ef;</span></button> :\n\t\t\t\t<button className=\"btn\" onClick={onSwitch}><span className=\"material-icon list-icon\">&#xe8f0;</span></button>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nIconSwitch.propTypes = {\n\ticon: PropTypes.string.isRequired,\n\tonSwitch: PropTypes.func.isRequired\n}\n\nexport default IconSwitch;","import PropTypes from 'prop-types';\n\nfunction ShopCard({ card }) {\n\tconst { name, price, color, img } = card;\n\n\treturn (\n\t\t<div className=\"shop-card\">\n\t\t\t<div className=\"shop-card-header\">\n\t\t\t\t<h3 className=\"product-name card-product-name\">{name}</h3>\n\t\t\t\t<p className=\"product-color\">{color}</p>\n\t\t\t</div>\n\t\t\t<div className=\"shop-card-img\">\n\t\t\t\t<img className=\"card-product-img\" src={img} alt={name}/>\n\t\t\t</div>\n\t\t\t<div className=\"shop-card-footer\">\n\t\t\t\t<p className=\"product-price\">${price}</p>\n\t\t\t\t<button className=\"add-btn\">add to cart</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nShopCard.propTypes = {\n\tcard: PropTypes.shape({\n\t\tname: PropTypes.string,\n\t\tprice: PropTypes.string,\n\t\tcolor: PropTypes.string,\n\t\timg: PropTypes.string\n\t}).isRequired\n}\n\nexport default ShopCard;","import PropTypes from 'prop-types';\nimport ShopCard from './ShopCard';\n\nfunction CardsView({ cards }) {\n\treturn (\n\t\t<div className=\"shop-cards\">\n\t\t\t{cards.map((card, idx) => <ShopCard card={card} key={idx} />)}\n\t\t</div>\n\t)\n}\n\nCardsView.propTypes = {\n\tcards: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tname: PropTypes.string,\n\t\t\tprice: PropTypes.string,\n\t\t\tcolor: PropTypes.string,\n\t\t\timg: PropTypes.string\n\t\t})\n\t).isRequired\n}\n\nexport default CardsView;","import PropTypes from 'prop-types';\n\nfunction ShopItem({ item }) {\n\tconst { name, price, color, img } = item;\n\n\treturn (\n\t\t<div className=\"shop-item\">\n\t\t\t<img className=\"item-product-img\" src={img} alt={name}/>\n\t\t\t<h3 className=\"product-name\">{name}</h3>\n\t\t\t<p className=\"product-color\">{color}</p>\n\t\t\t<p className=\"product-price\">${price}</p>\n\t\t\t<button className=\"add-btn\">add to cart</button>\n\t\t</div>\n\t)\n}\n\nShopItem.propTypes = {\n\titem: PropTypes.shape({\n\t\tname: PropTypes.string,\n\t\tprice: PropTypes.string,\n\t\tcolor: PropTypes.string,\n\t\timg: PropTypes.string\n\t}).isRequired\n}\n\nexport default ShopItem;","import PropTypes from 'prop-types';\nimport ShopItem from './ShopItem';\n\nfunction ListView({ items }) {\n\treturn (\n\t\t<div className=\"shop-items\">\n\t\t\t{items.map((item, idx) => <ShopItem item={item} key={idx} />)}\n\t\t</div>\n\t)\n}\n\nListView.propTypes = {\n\titems: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tname: PropTypes.string,\n\t\t\tprice: PropTypes.string,\n\t\t\tcolor: PropTypes.string,\n\t\t\timg: PropTypes.string\n\t\t})\n\t).isRequired\n}\n\nexport default ListView;","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport IconSwitch from \"./IconSwitch\";\nimport CardsView from \"./CardsView\";\nimport ListView from \"./ListView\";\n\nfunction Store({ products }) {\n\tconst [layoutType, setLayoutType] = useState(\"view_module\")\n\n\tconst onSwitch = () => {\n\t\tlet newLayoutType;\n\t\tlayoutType === \"view_module\" ? newLayoutType = \"view_list\" : newLayoutType = \"view_module\"\n\t\tsetLayoutType(newLayoutType);\n\t}\n\n\treturn (\n\t\t<div className=\"store\">\n\t\t\t<IconSwitch icon={layoutType} onSwitch={onSwitch} />\n\t\t\t{layoutType === \"view_module\" ?\n\t\t\t\t<CardsView cards={products} /> :\n\t\t\t\t<ListView items={products} />\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nStore.propTypes = {\n\tproducts: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tname: PropTypes.string,\n\t\t\tprice: PropTypes.string,\n\t\t\tcolor: PropTypes.string,\n\t\t\timg: PropTypes.string\n\t\t})\n\t).isRequired\n}\n\nexport default Store;","import './App.css';\nimport products from './products'\nimport Store from './components/Store';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\t\t\t<Store products={products}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}